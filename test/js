import foo from 'foo';

import { bar as baz } from 'bar';

/*! keep */
var foo = 1;
/** keep */
var bar = 1;
/* @preserve keep */
var baz = 1;

/* remove */

// remove

function foo ( bar ) {
    return { baz: 'qux' };
}

window.setTimeout(() => {
    window.alert(window.location.href);
}, 100);

window.foo = 1;

console.log(window.foo + 1);

window.foo += 1;

return [ 1 , 2 , 3 ];

return { foo : 1 , bar : 2 };

return false;

return null;

return true;

return 0;

return 1;

return 0.5;

return .5;

return -0;

return -1;

return -0.5;

return -.5;

// http://example.com
// 'http://example.com'
// //example.com
// '//example.com'

test = '//example.com';
test = 'http://example.com';

test = `
aaa
aaa
aaa
  aaa
  aaa
  aaa
aaa
aaa
aaa
`;

test = ( foo , bar ) => foo + bar;

test = ( foo ) => foo + 4;

test = `aaa ${ window.location.hostname } aaa ${ 0.5 + 1.50 + (a / b) }`;

for ( let i = 0, j = data.length; i < j; ++i ) {
    console.log( data[ i ] );
}

test = [0.5 , -0, -0.120];

switch ( foo ) {
    case 0 :
        foo = 0;
        break;
    case 1 :
        foo = 1;
        bar = foo;
        break;
    default :
        foo = bar = false;
}

if (/ foo /.test(bar)) {}
if (foo.match(/ bar /)) {}

return foo.replace(/ bar /g, 'qux');

test['foo']['bar']['baz']['qux'];
test['foo-bar']['baz']['qux'];

test = {
    "foo" : "bar",
    "baz": "qux",
};

test = {
    "foo-bar" : "baz",
    "qux": true,
};

test = [123456789, -123456789, 0.123456789, -0.123456789];